// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.9.0.77
//      SpecFlow Generator Version:1.9.0.0
//      Runtime Version:4.0.30319.42000
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace FishAutomatedTests.Features
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.9.0.77")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("HomePage as anonymous")]
    public partial class HomePageAsAnonymousFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "HomePage.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "HomePage as anonymous", "", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Check buttons from header")]
        [NUnit.Framework.CategoryAttribute("mytag")]
        [NUnit.Framework.TestCaseAttribute("Contact", "/contact", ".contact-map", null)]
        [NUnit.Framework.TestCaseAttribute("Subscribe", "/", "packages", null)]
        [NUnit.Framework.TestCaseAttribute("Login", "/identity/login", ".login-btn", null)]
        public virtual void CheckButtonsFromHeader(string button, string url, string element, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "mytag"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Check buttons from header", @__tags);
#line 4
this.ScenarioSetup(scenarioInfo);
#line 5
 testRunner.Given("I go to the site as anonymous", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 6
 testRunner.When(string.Format("I click button {0} at the header", button), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 7
 testRunner.Then(string.Format("I am redirected to the {0} page", url), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 8
 testRunner.And(string.Format("element {0} should be visible", element), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Check sections on the homepage")]
        [NUnit.Framework.TestCaseAttribute("Trial", null)]
        [NUnit.Framework.TestCaseAttribute("Products", null)]
        [NUnit.Framework.TestCaseAttribute("Key Features", null)]
        [NUnit.Framework.TestCaseAttribute("Thank you to our sponsors", null)]
        [NUnit.Framework.TestCaseAttribute("Packages", null)]
        [NUnit.Framework.TestCaseAttribute("Meet the team", null)]
        [NUnit.Framework.TestCaseAttribute("About us", null)]
        public virtual void CheckSectionsOnTheHomepage(string section, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Check sections on the homepage", exampleTags);
#line 17
this.ScenarioSetup(scenarioInfo);
#line 18
 testRunner.Given("I go to the site as anonymous", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 19
 testRunner.Then(string.Format("The {0} section should exist", section), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Check social buttons on the homepage")]
        [NUnit.Framework.TestCaseAttribute("LinkedIn", "https://www.linkedin.com/company/", null)]
        [NUnit.Framework.TestCaseAttribute("Twitter", "https://twitter.com/", null)]
        public virtual void CheckSocialButtonsOnTheHomepage(string button, string url, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Check social buttons on the homepage", exampleTags);
#line 32
 this.ScenarioSetup(scenarioInfo);
#line 33
 testRunner.Given("I go to the site as anonymous", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 34
 testRunner.When(string.Format("I click social {0}", button), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 35
 testRunner.Then(string.Format("The {0} should be opened", url), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Check links in the footer on the homepage")]
        [NUnit.Framework.TestCaseAttribute("Terms and Conditions", "/TermsConditions", "Terms & Conditions", null)]
        [NUnit.Framework.TestCaseAttribute("Privacy Policy", "/PrivacyPolicy", "Privacy Policy", null)]
        [NUnit.Framework.TestCaseAttribute("Cookies", "/cookies", "Cookies", null)]
        [NUnit.Framework.TestCaseAttribute("About", "/AboutUs", "About Us", null)]
        [NUnit.Framework.TestCaseAttribute("Contact", "/contact", "Contact", null)]
        [NUnit.Framework.TestCaseAttribute("FAQ", "/FAQ", "FAQ", null)]
        public virtual void CheckLinksInTheFooterOnTheHomepage(string link, string url, string page, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Check links in the footer on the homepage", exampleTags);
#line 43
 this.ScenarioSetup(scenarioInfo);
#line 44
 testRunner.Given("I go to the site as anonymous", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 45
 testRunner.When(string.Format("I click {0} in the footer section", link), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 46
 testRunner.Then(string.Format("I am redirected to the {0} page", url), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 47
 testRunner.And(string.Format("the {0} title should be correct", page), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("User should be able to select a package")]
        [NUnit.Framework.TestCaseAttribute("Basic", "/User/Register", null)]
        [NUnit.Framework.TestCaseAttribute("Advanced", "/Checkout/?productId=1129808", null)]
        [NUnit.Framework.TestCaseAttribute("Premium", "/Checkout/?productId=1129807", null)]
        public virtual void UserShouldBeAbleToSelectAPackage(string package, string url, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("User should be able to select a package", exampleTags);
#line 60
 this.ScenarioSetup(scenarioInfo);
#line 61
 testRunner.Given("I go to the site as anonymous", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 62
 testRunner.When(string.Format("I select a {0} and click Sign Up Now in the packages section", package), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 63
 testRunner.Then(string.Format("I am redirected to the {0} page", url), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
